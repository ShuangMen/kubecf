{{ define "scripts_deploy_args" }}

# Login to gcloud
printf "%s" '((gke-suse-cap-json))' > $PWD/gke-key.json
export GKE_CRED_JSON=$PWD/gke-key.json
gcloud auth activate-service-account --key-file $PWD/gke-key.json

export GKE_PROJECT="{{ .gke_project }}"
export GKE_CLUSTER_ZONE="{{ .gke_zone }}"
export GKE_CLUSTER_NAME="kubecf-ci-${BRANCH}-${CFSCHEDULER}-$(cat semver.gke-cluster/version | sed 's/\./-/g')"
export GKE_DNS_ZONE="{{ .gke_dns_zone }}"
export GKE_DOMAIN="{{ .gke_domain }}"
export DOMAIN="${GKE_CLUSTER_NAME}.${GKE_DOMAIN}"

gcloud --quiet beta container \
  --project "${GKE_PROJECT}" clusters create "${GKE_CLUSTER_NAME}" \
  --enable-network-policy \
  --zone "${GKE_CLUSTER_ZONE}" \
  --no-enable-basic-auth \
  --machine-type "n1-highcpu-16" \
  --image-type "UBUNTU" \
  --disk-type "pd-ssd" \
  --disk-size "100" \
  --metadata disable-legacy-endpoints=true \
  --scopes "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" \
  --preemptible \
  --num-nodes "1" \
  --enable-stackdriver-kubernetes \
  --enable-ip-alias \
  --network "projects/${GKE_PROJECT}/global/networks/default" \
  --subnetwork "projects/${GKE_PROJECT}/regions/$(echo ${GKE_CLUSTER_ZONE} | sed 's/-.$//')/subnetworks/default" \
  --default-max-pods-per-node "110" \
  --no-enable-master-authorized-networks \
  --addons HorizontalPodAutoscaling,HttpLoadBalancing \
  --no-enable-autorepair \
  --no-enable-autoupgrade \
  --no-enable-autoprovisioning

# Get a kubeconfig
gcloud --quiet container clusters get-credentials ${GKE_CLUSTER_NAME} --zone ${GKE_CLUSTER_ZONE} --project "${GKE_PROJECT}"

export SCF_CHART="$(readlink -f s3.kubecf-ci/*.tgz)"
export BACKEND=gke
export DOCKER_ORG=cap-staging
export QUIET_OUTPUT=true
export DOWNLOAD_CATAPULT_DEPS=false
export KUBECFG="$(readlink -f ~/.kube/config)"

# https://unix.stackexchange.com/a/265151
read -r -d '' CONFIG_OVERRIDE <<'EOF' || true
sizing:
  diego_cell:
    ephemeral_disk:
      size: 300000
EOF
export CONFIG_OVERRIDE

pushd catapult
export CLUSTER_PASSWORD=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
# Bring up a k8s cluster and builds+deploy kubecf
# https://github.com/SUSE/catapult/wiki/Build-and-run-SCF#build-and-run-kubecf
make kubeconfig kubecf

# Setup dns
tcp_router_ip=$(kubectl get svc -n scf tcp-router-public -o json | jq -r .status.loadBalancer.ingress[].ip | head -n 1)
public_router_ip=$(kubectl get svc -n scf router-public -o json | jq -r .status.loadBalancer.ingress[].ip | head -n 1)

gcloud --quiet beta dns --project=${GKE_PROJECT} record-sets transaction start \
  --zone=${GKE_DNS_ZONE}
gcloud --quiet beta dns --project=${GKE_PROJECT} record-sets transaction add \
  --name=\*.${DOMAIN}. --ttl=300 --type=A --zone=${GKE_DNS_ZONE} $public_router_ip
gcloud --quiet beta dns --project=${GKE_PROJECT} record-sets transaction add \
  --name=tcp.${DOMAIN}. --ttl=300 --type=A --zone=${GKE_DNS_ZONE} $tcp_router_ip
gcloud --quiet beta dns --project=${GKE_PROJECT} record-sets transaction execute \
  --zone=${GKE_DNS_ZONE}

{{ end }}
